{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMA2CeA,EArCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACJC,mBAAS,IADL,mBACjCC,EADiC,KACrBC,EADqB,KAiBvC,OAEA,0BAAMC,SAba,SAACC,GACrBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,OAUb,2BACCO,KAAK,OACLC,MAAQT,EACRU,SAtBsB,SAACP,GAC1BF,EAAcE,EAAEQ,OAAOF,Y,uBCPbG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACTC,EADS,iDACuCC,UAAUH,GADjD,+DAEII,MAAMF,GAFV,cAETG,EAFS,gBAGQA,EAAKC,OAHb,uBAGPC,EAHO,EAGPA,KAEFC,EAAQD,EAAKE,KAAI,SAAAC,GAEnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAV1B,kBAeRM,GAfQ,4CAAH,sDCeLO,EAfK,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAI1B,OAEI,yBAAKc,UAAU,0CACb,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCkBCO,EAvBC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDJ,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAuBtC,OAhBAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GAEEH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAG1B,CAACpB,IAMGqB,EDpByBK,CAAa1B,GAAhCa,EAFe,EAErBN,KAAca,EAFO,EAEPA,QAErB,OACI,oCACI,wBAAIJ,UAAU,+CAAgDhB,GAE5DoB,GAAW,uBAAGJ,UAAU,oCAAb,WACb,yBAAKA,UAAU,aAEPH,EAAOJ,KAAI,SAACC,GAAD,OACP,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACJD,UEWlBkB,EAxBM,WAAO,IAAD,EACa1C,mBAAS,CAAC,cADvB,mBAChB2C,EADgB,KACJ5C,EADI,KAGvB,OACE,oCACE,4CACA,kBAAE,EAAF,CAAcA,cAAgBA,IAC9B,6BAGA,4BAEI4C,EAAWpB,KAAI,SAAAT,GAAQ,OACjB,kBAAC,EAAD,CACE2B,IAAM3B,EACNA,SAAWA,U,MCb/B8B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.087420d4.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types';\n\n\n//componente pensado para Form o cuando la persona esccriba algo.\n\nconst AddCategory = ({ setCategories }) => {\n\t\tconst  [inputValue, setInputValue] = useState('');//''por defec -  si lo dejo vacío es undefined\n\t\tconst handleInputChange = (e) => {\n\t\t\tsetInputValue(e.target.value)//esta es la f() que va actualizar el estado\n\t\t}\n\n\t\tconst handleSubmit = (e) => {\n\t\t\te.preventDefault();\n\t\t\t// console.log('Submit Hecho');\n\t\t\tif (inputValue.trim().length > 2) {\n\t\t\t\tsetCategories(cate => [ inputValue, ...cate, ]);\n\t\t\t\tsetInputValue('');\n\t\t\t}\n\t\t\t\n\n\t\t}\n\n    return (\n        \n\t\t\t\t<form onSubmit={ handleSubmit }>\n\t\t\t\t\t\n\t\t\t\t\t<input \n\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\tvalue={ inputValue }\n\t\t\t\t\t\tonChange={ handleInputChange }//va a disparar cada vez que la caja de texto cambie y en onChange.\n\t\t\t\t\t\t//dispara un cambio\n\t\t\t\t\t/>\n\t\t\t\t</form>\n        \n    )\n}\n\n\nAddCategory.propTypes = {\n\tsetCategories : PropTypes.func.isRequired\n}\n\nexport default AddCategory;\n\n","//hace la peticción htpp\n\nexport const getGifs = async(category) => {\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=rEsg35kMJgcpu89M3sbOsXXeTd5BLxc6`;\n        const resp = await fetch(url);\n        const { data } = await resp.json();\n\n        const gifs =  data.map(img => {\n            // new obj con info\n            return {\n                id: img.id,\n                title: img.title,\n                url: img.images.downsized_medium.url\n            }\n        });\n        \n        // console.log(gifs);//en toría este es valor del nuevo estado va ser gifs\n        return gifs;\n    }","import React from 'react'\n\nconst GifGridItem = ({ title, url }) => {\n\n    // console.log({id, title, url});\n\n    return (\n        \n        <div className=\"card animate__animated animate__fadeIn\">\n          <img src={url} alt={title} />\n          <p>{title}</p>\n        </div>\n    \n        \n    )\n}\n\nexport default GifGridItem\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n\n\nconst GifGrid = ({category}) => {\n    \n    const {data: images, loading} = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className=\"card-grid animate__animated animate__fadeIn\">{ category }</h3>\n\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n            <div className=\"card-grid\" >\n                {\n                    images.map((img) => (\n                        <GifGridItem \n                            key={img.id} \n                            { ...img } \n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n\nexport default GifGrid;\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\n\nexport const useFetchGifs = (category) => {\n    \n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        \n        getGifs(category)\n            .then(imgs => {\n                    // console.log(imgs);\n                    setState({\n                        data: imgs,\n                        loading: false\n                    });\n                })\n    }, [category])\n    // se hace el efecto cuando cambia la categotía.\n\n   \n     \n\n    return state;// {data[], loading: true};\n\n}","import React, { useState } from 'react';\nimport  AddCategory from './AddCategory'\nimport GifGrid from './GifGrid';\n\n\n\nconst GifExpertApp = () => {\n    const [categories, setCategories] = useState(['One Punch']);\n\n    return (\n      <>\n        <h2>GifExpertApp</h2>\n        < AddCategory setCategories={ setCategories }/>\n        <hr></hr>\n        \n\n        <ol>\n          {\n            categories.map(category => ( \n                  <GifGrid \n                    key={ category }\n                    category={ category }\n                  />\n               ))\n          }\n        </ol>\n      </>\n    );\n}\n\nexport default GifExpertApp;\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp  from './components/GifExpertApp'\n\nimport './index.css';\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}