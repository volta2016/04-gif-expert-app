{"version":3,"sources":["assets/static/logo-gif-expert-app.svg","components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/Header.js","components/Footer.js","components/GifExpertApp.js","index.js","assets/static/search.svg"],"names":["module","exports","AddCategory","categories","setCategories","useState","inputValue","setInputValue","handleSubmit","e","preventDefault","trim","length","cate","onSubmit","className","type","value","onChange","target","src","btnSearch","alt","onClick","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","proTypes","PropTypes","string","isRequired","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","protoTypes","Header","logoGif","Footer","href","GifExpertApp","defaultCategories","ReactDOM","render","document","getElementById"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,iD,mKCoD5BC,EA7CK,SAAC,GAAiC,EAAhCC,WAAiC,IAArBC,EAAoB,EAApBA,cAAoB,EACfC,mBAAS,IADM,mBAC5CC,EAD4C,KAChCC,EADgC,KAQ9CC,EAAe,SAACC,GACrBA,EAAEC,iBAGEJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MASd,OAEA,0BAAMO,SAAWN,GAChB,2BAAIF,GACJ,yBAAKS,UAAU,UACd,2BAAOC,KAAK,OAAOC,MAAQX,EAAaY,SA1BlB,SAACT,GAC1BF,EAAcE,EAAEU,OAAOF,UA4BpB,4BAAQD,KAAK,SAASE,SAAWV,GAChC,yBAAKO,UAAU,cAAcK,IAAKC,IAAWC,IAAI,oBAGnD,4BAAQP,UAAU,qBAAqBQ,QAhBtB,WACnBnB,EAAc,MAeZ,gB,uCCxCQoB,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAQD,EAAKE,KAAI,SAAAC,GAEnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAeZM,GAfY,4CAAH,sDCEdO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAI1B,OAEI,yBAAKZ,UAAU,0CACb,yBAAKK,IAAKO,EAAKL,IAAKe,IACpB,2BAAIA,KASdG,EAAYC,SAAW,CACrBJ,MAAOK,IAAUC,OAAOC,WACxBjB,IAAKe,IAAUC,OAAOC,YAITJ,QCpBTK,EAAU,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAAc,ECHJ,SAACA,GAAc,IAAD,EAEZpB,mBAAS,CAC/B2B,KAAM,GACNc,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAkBtC,OAXAC,qBAAU,WAENzB,EAAQC,GACHyB,MAAK,SAAAC,GACEH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAG1B,CAACrB,IAEGsB,EDbyBK,CAAa3B,GAAhCa,EAFe,EAErBN,KAAcc,EAFO,EAEPA,QAErB,OACI,oCACI,wBAAI/B,UAAU,+CAAgDU,EAA9D,iBACEqB,GAAW,yBAAK/B,UAAU,YAE5B,yBAAKA,UAAU,aACVuB,EAAOJ,KAAI,SAACC,GAAD,OACR,kBAAC,EAAD,eAAakB,IAAKlB,EAAIC,IAASD,UAQnDU,EAAQS,WAAa,CACjB7B,SAAUiB,IAAUC,OAAOC,YAGhBC,Q,iBEjBAU,EAVA,WACb,OACE,gCACE,gCACE,yBAAKxC,UAAU,cAAcK,IAAKoC,IAASlC,IAAI,2BCKxCmC,EAVA,WACb,OACI,gCACE,yBAAK1C,UAAU,SACf,qEAAuC,uBAAG2C,KAAK,yBAAR,uBC+BhCC,EA5BM,SAAC,GAA+B,EAA7BC,kBAA8B,IAAD,EACbvD,mBAAS,CAAC,cADG,mBAC1CF,EAD0C,KAC9BC,EAD8B,KAIjD,OACE,oCACE,kBAAC,EAAD,MACA,yBAAKW,UAAU,aACb,mEACA,kBAAE,EAAF,CAAcX,cAAgBA,IAC9B,6BAEA,4BAEID,EAAW+B,KAAI,SAAAT,GAAQ,OACjB,kBAAC,EAAD,CACE4B,IAAM5B,EACNA,SAAWA,SAMzB,kBAAC,EAAD,Q,MCxBRoC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U,kBCV1BhE,EAAOC,QAAU,IAA0B,qC","file":"static/js/main.51e4c7f7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-gif-expert-app.640560cd.svg\";","import React, {useState} from 'react'\nimport PropTypes from 'prop-types';\nimport btnSearch from '../assets/static/search.svg'\n\n\n//componente pensado para Form o cuando la persona esccriba algo.\n\nconst AddCategory = ({categories, setCategories }) => {\n\t\tconst  [inputValue, setInputValue] = useState('');//''por defec -  si lo dejo vacÃ­o es undefined\n\t\tconst handleInputChange = (e) => {\n\t\t\tsetInputValue(e.target.value);//f() que va actualizar el estado\n\n\t\t\t// console.log('handleInputChange ok');\n\t\t}\n\n\t\tconst handleSubmit = (e) => {\n\t\t\te.preventDefault();\n\n\t\t\t// console.log('Submit Hecho', inputValue);\n\t\t\tif (inputValue.trim().length > 2) {\n\t\t\t\tsetCategories(cate => [ inputValue, ...cate ]);\n\t\t\t\tsetInputValue('');\n\t\t\t}\n\t\t\n\t\t}\n\n\t\tconst handleClear = () => {\n\t\t\tsetCategories([]);\n\t\t}\n\n    return (\n        \n\t\t\t\t<form onSubmit={ handleSubmit }>\n\t\t\t\t\t<p>{inputValue}</p>\n\t\t\t\t\t<div className=\"search\">\n\t\t\t\t\t\t<input type=\"text\" value={ inputValue } onChange={ handleInputChange } />\n\t\t\t\t\t\t{/* va a disparar cada vez que la caja de texto cambie y en onChange.\n\t\t\t\t\t\tdispara un cambio */}\n\t\t\t\t\t\t<button type=\"submit\" onChange={ handleSubmit }>\n\t\t\t\t\t\t\t<img className=\"search__btn\" src={btnSearch} alt=\"button search\" />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button className=\"search__btn--clear\" onClick={handleClear}>Clear Gifs</button>\n\t\t\t\t</form>\n    )\n}\n\n\nAddCategory.propTypes = {\n\tsetCategories : PropTypes.func.isRequired\n}\n\nexport default AddCategory;\n\n","//hace la peticciÃ³n htpp\n\nexport const getGifs = async(category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=rEsg35kMJgcpu89M3sbOsXXeTd5BLxc6`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs =  data.map(img => {\n        // new obj con info\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images.downsized_medium.url\n        }\n    });\n    \n    // console.log(gifs);//en torÃ­a este es valor del nuevo estado va ser gifs\n    return gifs;\n} ","import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst GifGridItem = ({ title, url }) => {\n\n    // console.log({id, title, url});\n\n    return (\n        \n        <div className=\"card animate__animated animate__fadeIn\">\n          <img src={url} alt={title} />\n          <p>{title}</p>\n        </div>\n    \n        \n    )\n}\n\n\n\nGifGridItem.proTypes = {\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired\n\n}\n\nexport default GifGridItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n\n\nconst GifGrid = ({category}) => {\n    \n    const {data: images, loading} = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className=\"card-grid animate__animated animate__fadeIn\">{ category } ðŸŒŸ</h3>\n            { loading && <div className=\"spinner\"></div>}\n\n            <div className=\"card-grid\" >\n                {images.map((img) => (\n                    <GifGridItem key={img.id} { ...img } />\n                ))}\n            </div>\n        </>\n    )\n}\n\n\nGifGrid.protoTypes = {\n    category: PropTypes.string.isRequired,\n}\n\nexport default GifGrid;\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\n\nexport const useFetchGifs = (category) => {\n    \n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        \n        getGifs(category)\n            .then(imgs => {\n                    setState({\n                        data: imgs,\n                        loading: false\n                    }); \n                })\n    }, [category])\n    // se hace el efecto cuando cambia la categotÃ­a.\n    return state;// {data[], loading: true};\n}","import React from 'react'\nimport logoGif from '../assets/static/logo-gif-expert-app.svg'\n\nconst Header = () => {\n  return (\n    <header>\n      <figure>\n        <img className=\"btn__search\" src={logoGif} alt=\"Logo Gif expert App\" />\n      </figure>\n    </header>\n  )\n}\n\nexport default Header;\n","import React from 'react'\n\nconst Footer = () => {\n  return (\n      <footer>\n        <div className=\"line\"></div>\n        <small>Â© Copyright 2021 Gif Expert App <a href=\"https://voltauxui.cl/\">www.voltauxui.cl</a></small>\n      </footer>\n  )\n}\n\n\nexport default Footer;\n\n\n","import React, { useState } from 'react';\nimport  AddCategory from './AddCategory'\nimport GifGrid from './GifGrid';\nimport Header from './Header'\nimport Footer from './Footer';\n\n\n\n\nconst GifExpertApp = ({ defaultCategories = [] }) => {\n    const [categories, setCategories] = useState(['One Punch']);\n    // const [categories, setCategories] = useState(defaultCategories);\n\n    return (\n      <>\n        <Header />\n        <div className=\"container\">\n          <h2>Find your favorite gif ðŸ˜„</h2>\n          < AddCategory setCategories={ setCategories }/>\n          <hr></hr>\n          \n          <ol>\n            {\n              categories.map(category => ( \n                    <GifGrid \n                      key={ category }\n                      category={ category }\n                    />\n                ))\n            }\n          </ol>\n        </div>\n        <Footer />\n      </>\n    );\n}\n\nexport default GifExpertApp;\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp  from './components/GifExpertApp'\n\nimport './index.css';\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n","module.exports = __webpack_public_path__ + \"static/media/search.9f64d783.svg\";"],"sourceRoot":""}